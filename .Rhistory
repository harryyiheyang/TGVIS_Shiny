load(glue("~/Mr.Jones/1/main2/AR05-Zero2-UR0-BR1-URvar1-URatio005-Causal-nout500k-p100-hy0005-hxada-m400.RData"))
SAM=SSAM
ZA=data.frame(power=truepositive(Brj[SSAM,1:499,,],theta0)$TNVec,Method=ordered(c("cisIVW","Grant2022","cTWAS","TGFM","TGVIS"),levels=c("cisIVW","Grant2022","cTWAS","TGFM","TGVIS")))
ZA$case="var(inf) = var(exposure)"
ZA1=ZA
load(glue("~/Mr.Jones/1/main2/AR05-Zero2-UR0-BR1-VBHP05.RData"))
SAM=SSAM
ZA=data.frame(power=truepositive(Brj[SSAM,1:499,,],theta0)$TNVec,Method=ordered(c("cisIVW","Grant2022","cTWAS","TGFM","TGVIS"),levels=c("cisIVW","Grant2022","cTWAS","TGFM","TGVIS")))
ZA$case="var(inf) = 0.5 * var(exposure)"
ZA1=rbind(ZA,ZA1)
load(glue("~/Mr.Jones/1/main2/AR05-Zero2-UR0-BR1-VBHP025.RData"))
SAM=SSAM
ZA=data.frame(power=truepositive(Brj[SSAM,1:499,,],theta0)$TNVec,Method=ordered(c("cisIVW","Grant2022","cTWAS","TGFM","TGVIS"),levels=c("cisIVW","Grant2022","cTWAS","TGFM","TGVIS")))
ZA$case="var(inf) = 0.25 * var(exposure)"
ZA1=rbind(ZA,ZA1)
load(glue("~/Mr.Jones/1/main2/AR05-Zero2-UR0-BR1-VBHP01.RData"))
SAM=SSAM
ZA=data.frame(power=truepositive(Brj[SSAM,1:499,,],theta0)$TNVec,Method=ordered(c("cisIVW","Grant2022","cTWAS","TGFM","TGVIS"),levels=c("cisIVW","Grant2022","cTWAS","TGFM","TGVIS")))
ZA$case="var(inf) = 0.1 * var(exposure)"
ZA1=rbind(ZA,ZA1)
load(glue("~/Mr.Jones/1/main2/AR05-Zero2-UR0-BR0-URvar1-URatio005-Causal-nout500k-p100-hy0005-hxada-m400.RData"))
SAM=SSAM
ZA=data.frame(power=truepositive(Brj[SSAM,1:499,,],theta0)$TNVec,Method=ordered(c("cisIVW","Grant2022","cTWAS","TGFM","TGVIS"),levels=c("cisIVW","Grant2022","cTWAS","TGFM","TGVIS")))
ZA$case="var(inf) = 0"
ZA1=rbind(ZA,ZA1)
write.csv(ZA1,glue("~/MR_CGTS/SourceData/VaryingVarInf_TN_{SAM}.csv"),row.names=F)
plot2=ggplot(ZA1, aes(y = Method, x = power, fill = Method)) +theme(plot.title = element_text(size = 15),strip.text = element_text(size = 12),axis.title = element_text(size = 12),axis.text = element_text(size = 12))+
geom_bar(stat = "identity", position = position_dodge(), color="black") +
facet_grid(~case)+
geom_text(aes(label = sprintf("%.3f", power)), position = position_dodge(width = 0.9), hjust = -0.1) +
labs(title = "B. True Negative Rate of Removing All Non-Causal Tissue-Gene Pairs", x= "Causal Effect Estimate") +
scale_fill_brewer(palette="BrBG") +
guides(fill="none", color="none") +
scale_x_continuous(limits = c(0,1.1),breaks=seq(0,1.1,by=0.5))+
theme(axis.title.y = element_blank())
########################################################################
load(glue("~/Mr.Jones/1/main2/AR05-Zero2-UR0-BR1-URvar1-URatio005-Causal-nout500k-p100-hy0005-hxada-m400.RData"))
SAM=SSAM
ZA=data.frame(power=truepositive(Brj[SSAM,1:499,,],theta0)$TPVec,Method=ordered(c("cisIVW","Grant2022","cTWAS","TGFM","TGVIS"),levels=c("cisIVW","Grant2022","cTWAS","TGFM","TGVIS")))
ZA$case="var(inf) = var(exposure)"
ZA1=ZA
load(glue("~/Mr.Jones/1/main2/AR05-Zero2-UR0-BR1-VBHP05.RData"))
SAM=SSAM
ZA=data.frame(power=truepositive(Brj[SSAM,1:499,,],theta0)$TPVec,Method=ordered(c("cisIVW","Grant2022","cTWAS","TGFM","TGVIS"),levels=c("cisIVW","Grant2022","cTWAS","TGFM","TGVIS")))
ZA$case="var(inf) = 0.5 * var(exposure)"
ZA1=rbind(ZA,ZA1)
load(glue("~/Mr.Jones/1/main2/AR05-Zero2-UR0-BR1-VBHP025.RData"))
SAM=SSAM
ZA=data.frame(power=truepositive(Brj[SSAM,1:499,,],theta0)$TPVec,Method=ordered(c("cisIVW","Grant2022","cTWAS","TGFM","TGVIS"),levels=c("cisIVW","Grant2022","cTWAS","TGFM","TGVIS")))
ZA$case="var(inf) = 0.25 * var(exposure)"
ZA1=rbind(ZA,ZA1)
load(glue("~/Mr.Jones/1/main2/AR05-Zero2-UR0-BR1-VBHP01.RData"))
SAM=SSAM
ZA=data.frame(power=truepositive(Brj[SSAM,1:499,,],theta0)$TPVec,Method=ordered(c("cisIVW","Grant2022","cTWAS","TGFM","TGVIS"),levels=c("cisIVW","Grant2022","cTWAS","TGFM","TGVIS")))
ZA$case="var(inf) = 0.1 * var(exposure)"
ZA1=rbind(ZA,ZA1)
load(glue("~/Mr.Jones/1/main2/AR05-Zero2-UR0-BR0-URvar1-URatio005-Causal-nout500k-p100-hy0005-hxada-m400.RData"))
SAM=SSAM
ZA=data.frame(power=truepositive(Brj[SSAM,1:499,,],theta0)$TPVec,Method=ordered(c("cisIVW","Grant2022","cTWAS","TGFM","TGVIS"),levels=c("cisIVW","Grant2022","cTWAS","TGFM","TGVIS")))
ZA$case="var(inf) = 0"
ZA1=rbind(ZA,ZA1)
write.csv(ZA1,glue("~/MR_CGTS/SourceData/VaryingVarInf_TP_{SAM}.csv"),row.names=F)
plot3=ggplot(ZA1, aes(y = Method, x = power, fill = Method)) +theme(plot.title = element_text(size = 15),strip.text = element_text(size = 12),axis.title = element_text(size = 12),axis.text = element_text(size = 12))+
geom_bar(stat = "identity", position = position_dodge(), color="black") +
facet_grid(~case)+
geom_text(aes(label = sprintf("%.3f", power)), position = position_dodge(width = 0.9), hjust = -0.1) +
labs(title = "C. True Positive Rate of Identifying All Causal Tissue-Gene Pairs", x= "Causal Effect Estimate") +
scale_fill_brewer(palette="BrBG") +
guides(fill="none", color="none") +
scale_x_continuous(limits = c(0,1.1),breaks=seq(0,1.1,by=0.5))+
theme(axis.title.y = element_blank())
#svg(glue("~/Mr.Jones/1/Inf_Zero_{SSAM}_V3X1.svg"),width=16,height=8)
pdf(glue("~/Mr.Jones/1/Inf_Zero_{SSAM}_V3X1.pdf"),width=16,height=8)
egg::ggarrange(plot1,plot2,plot3,nrow=3)
dev.off()
}
PEF=fread("/mnt/vstor/SOM_EPBI_XXZ10/yxy1234/SBayesRC/PEF/PEF.ma")%>%dplyr::select(SNP,P=p)
A=PEF%>%dplyr::select(SNP,P)%>%write.table(.,"~/MR_CGTS/PEF_analysis/plinkfile/PEF.txt",row.names=F,quote=F,sep="\t")
setwd("~/Plink")
system("./plink --bfile /mnt/vstor/SOM_EPBI_XXZ10/yxy1234/NealeReference/all_chrs --clump ~/MR_CGTS/PEF_analysis/plinkfile/PEF.txt --clump-field P  --clump-kb 1000 --clump-p1 5e-8 --clump-p2 5e-8 --clump-r2 0.01 --out ~/MR_CGTS/PEF_analysis/plinkfile/PEF_SBayesRC")
remove(PEF)
library(glue)
library(data.table)
library(dplyr)
library(org.Hs.eg.db)
library(stringr)
library(ggplot2)
library(tidyr)
library(dplyr)
library(annotables,lib.loc="~/R/x86_64-pc-linux-gnu-library/4.2/")
grch38
options(bitmapType = "cairo")
source("~/MR_CGTS/basicfunction.R")
extract_and_replace <- function(df, GeneSymbolEnsemble) {
# 找出含有 'clu' 的基因位置
clu_indices <- grep("clu", df$Gene)
# 提取含有 "ENSG" 的部分并替换
df$Gene[clu_indices] <- sub(".*(ENSG\\d+).*", "\\1", df$Gene[clu_indices])
# 使用 match 函数在 GeneSymbolEnsemble 中查找并替换
match_indices <- match(df$Gene[clu_indices], GeneSymbolEnsemble$Ensembl)
df$Gene[clu_indices] <- GeneSymbolEnsemble$Symbol[match_indices]
return(df)
}
variant=arrow::read_parquet("~/1000G/9M_BP_3738.parquet")
variant$MarkerName=paste0(variant$CHR,":",variant$BP)
tissue=readRDS("~/MR_CGTS/Tissue31.rds")
UVMR=readRDS("~/MRBEE.IPOD.Simulation/UVMR.rds")
UVMR=readRDS("~/MR_CGTS/UVMRlist.rds")
GeneSymbolEnsemble <- readRDS("~/MR_CGTS/GeneInformation.rds")
Trait=c("PP","ALB","AAA","ALT","AST","Baso","Bilirubin","BMI","BUN","CAD","Cystatin","DBP","Eosino",
"FPG","HB","HBA1C","HDL","LDL","Mono","Neutro","PLA","RBC","SBP","T2D",
"TCh","TG","UA","VTE","WBC","sP","QTI","JTI","QRS","AF","ALP","HEG","eGFR","LYM","GGT","FFratio","APOA1","APOB","SHBG","PLE2","PLE1")
Trait_FullName <- c("Pulse Pressure",
"Albumin",
"Abdominal Aortic Aneurysm",
"Alanine Aminotransferase",
"Aspartate Aminotransferase",
"Basophils",
"Total Bilirubin",
"Body Mass Index",
"Blood Urea Nitrogen",
"Coronary Artery Disease",
"Cystatin C",
"Diastolic Blood Pressure",
"Eosinophils",
"Fasting Plasma Glucose",
"Hemoglobin",
"Hemoglobin A1c",
"HDL Cholesterol",
"LDL Cholesterol",
"Monocytes",
"Neutrophils",
"Platelets",
"Red Blood Cells",
"Systolic Blood Pressure",
"Type 2 Diabetes",
"Total Cholesterol",
"Triglycerides",
"Urate",
"Venous Thromboembolism",
"White Blood Cells",
"Serum Phosphate",
"QT Interval",
"JT Interval",
"QRS Complex",
"Atrial Fibrillation",
"Alkaline Phosphatase",
"Standing Height",
"Creatinine-Based eGFR",
"Lymphocytes",
"Gamma-Glutamyl Transferase",
"FEV1/FVC Ratio",
"Apolipoprotein A1",
"Apolipoprotein B",
"Sex Hormone-Binding Globulin",
"Pleiotropy (SBP to DBP)",
"Pleiotropy (DBP to SBP)")
W=readRDS("~/MR_CGTS/UVMRlist.rds")
#W=W[which(W$P<(0.05/2e4)),]
#W$Variable <- gsub("\\+Cortex$", "+Brain_Cortex", W$Variable )
#W$Variable <- gsub("\\+Cerebellum$", "+Brain_Cerebellum", W$Variable )
#W$Genetype <- ifelse(grepl("clu", W$Variable), "sGene", "eGene")
#W[c("Gene", "Tissue")] <- do.call(rbind, strsplit(W$Variable, "\\+"))
#W=extract_and_replace(W,GeneSymbolEnsemble)
#saveRDS(W,"~/MR_CGTS/UVMRlist.rds")
NovelTGVIS=NovelTGFM=list()
for(i in 1:45){
GG <- readRDS(glue("~/MR_CGTS/{Trait[i]}_analysis/Refine/susieselect_inf.rds"))  %>% Forcerbind(.) %>% group_by(cs,CHR,BP) %>% mutate(cs.pratt = sum(pratt)) %>% ungroup() %>% dplyr::filter(cs.pratt>0.15)
GG=GG[which(GG$Type!="SNP"),]
GG$Variable <- gsub("\\+Cortex$", "+Brain_Cortex", GG$Variable )
GG$Variable <- gsub("\\+Cerebellum$", "+Brain_Cerebellum", GG$Variable )
GG$Identifier=paste0(GG$CHR,":",GG$BP,":",GG$Variable)
GG=GG[!duplicated(GG$Identifier),]
GG[c("Gene", "Tissue")] <- do.call(rbind, strsplit(GG$Variable, "\\+"))
GG=extract_and_replace(GG,GeneSymbolEnsemble)
GG$MarkerName=paste0(GG$CHR,":",GG$BP)
#GG=merge(GG,variant[,c("MarkerName","BP38")],by="MarkerName",all.x=T)
#GG$TSS=grch38$start[match(GG$Gene,grch38$symbol)]
#GG$TES=grch38$end[match(GG$Gene,grch38$symbol)]
GG$Identifier=paste0(GG$MarkerName,":CS",GG$cs)
Gene12=names(table(GG$Identifier))[which(table(GG$Identifier)<=2)]
GG1=GG[which(GG$Identifier%in%Gene12),]
GG1=na.omit(GG1)
WW=W[which(W$Trait==Trait[i]),]
GG1=GG1[which(GG1$Gene%in%WW$Gene),]
WW=WW[which(W$P<(0.05/2e4/31)),]
a=intersect(WW$Gene,GG1$Gene)
b=setdiff(GG$Gene,a)
GG2=GG1[which(GG1$Gene%in%b),]
NovelTGVIS[[i]]=data.frame(Total=length(unique(GG$Identifier)),Novel=length(unique(GG2$Identifier)),Trait=Trait_FullName[i])
GG <- readRDS(glue("~/MR_CGTS/{Trait[i]}_analysis/Refine/tgfmselect.rds"))  %>% Forcerbind(.) %>% group_by(cs,CHR,BP) %>% mutate(cs.pratt = sum(pratt)) %>% ungroup() %>% dplyr::filter(pip>0.5)
GG=GG[which(GG$Type!="SNP"),]
GG$Variable <- gsub("\\+Cortex$", "+Brain_Cortex", GG$Variable )
GG$Variable <- gsub("\\+Cerebellum$", "+Brain_Cerebellum", GG$Variable )
GG$Identifier=paste0(GG$CHR,":",GG$BP,":",GG$Variable)
GG=GG[!duplicated(GG$Identifier),]
GG[c("Gene", "Tissue")] <- do.call(rbind, strsplit(GG$Variable, "\\+"))
GG=extract_and_replace(GG,GeneSymbolEnsemble)
GG$MarkerName=paste0(GG$CHR,":",GG$BP)
#GG=merge(GG,variant[,c("MarkerName","BP38")],by="MarkerName",all.x=T)
#GG$TSS=grch38$start[match(GG$Gene,grch38$symbol)]
#GG$TES=grch38$end[match(GG$Gene,grch38$symbol)]
GG$Identifier=paste0(GG$MarkerName,":CS",GG$cs)
Gene12=names(table(GG$Identifier))[which(table(GG$Identifier)<=2)]
GG1=GG[which(GG$Identifier%in%Gene12),]
GG1=na.omit(GG1)
WW=W[which(W$Trait==Trait[i]),]
GG1=GG1[which(GG1$Gene%in%WW$Gene),]
WW=WW[which(W$P<(0.05/2e4/31)),]
a=intersect(WW$Gene,GG1$Gene)
b=setdiff(GG$Gene,a)
GG2=GG1[which(GG1$Gene%in%b),]
NovelTGFM[[i]]=data.frame(Total=length(unique(GG$Identifier)),Novel=length(unique(GG2$Identifier)),Trait=Trait_FullName[i])
}
NovelTGVIS=do.call(rbind,NovelTGVIS)
NovelTGFM=do.call(rbind,NovelTGFM)
a=c(1:45)
names(a)=Trait_FullName
for(i in 1:45){
plink=fread(glue("~/MR_CGTS/{Trait[i]}_analysis/plinkfile/{Trait[i]}.clumped"))
indcluster=MRBEEX::cluster_snps(plink[,c("SNP","CHR","BP","P")],window_size=1e6)
a[i]=nrow(indcluster)
}
plink=fread(glue("~/MR_CGTS/{Trait[i]}_analysis/plinkfile/{Trait[i]}.clumped"))
NovelTGVIS$Total_Fraction=NovelTGVIS$Total/a
NovelTGVIS$Novel_Fraction=NovelTGVIS$Novel/a
NovelTGFM$Total_Fraction=NovelTGFM$Total/a
NovelTGFM$Novel_Fraction=NovelTGFM$Novel/a
NovelTGVIS$Ratio=NovelTGVIS$Novel/NovelTGVIS$Total
NovelTGFM$Ratio=NovelTGFM$Novel/NovelTGFM$Total
NovelTGVIS1 <- NovelTGVIS %>%
pivot_longer(cols = c(Total, Total_Fraction, Novel, Novel_Fraction),
names_to = c(".value", "Type"),
names_sep = "_") %>%
mutate(Type = ifelse(Type == "Fraction", "Proportion", "Number"))
NovelTGVIS1$Type[is.na(NovelTGVIS1$Type)]="Number"
NovelTGFM1 <- NovelTGFM %>%
pivot_longer(cols = c(Total, Total_Fraction, Novel, Novel_Fraction),
names_to = c(".value", "Type"),
names_sep = "_") %>%
mutate(Type = ifelse(Type == "Fraction", "Proportion", "Number"))
NovelTGFM1$Type[is.na(NovelTGFM1$Type)]="Number"
NovelTGVIS1 <- NovelTGVIS1 %>%
pivot_longer(cols = c(Total, Novel),
names_to = "What",
values_to = "results")
NovelTGFM1 <- NovelTGFM1 %>%
pivot_longer(cols = c(Total, Novel),
names_to = "What",
values_to = "results")
NovelTGVIS1$What[which(NovelTGVIS1$What=="Novel")]="Likely Novel"
NovelTGFM1$What[which(NovelTGFM1$What=="Novel")]="Likely Novel"
plot1=ggplot(data = NovelTGVIS1, aes(x = results, y = Trait, fill = What)) +
geom_bar(stat = "identity", position = position_dodge(),color="grey30") +
facet_wrap(~Type, scales = "free_x", ncol = 2) +
xlab("number of causal gene-tissue pairs") +
theme(axis.text.y = element_text(size = rel(0.9)),
axis.title.y = element_blank(),
legend.position = c(0.35, 0.01),
legend.justification = c(0.35, 0.01),
legend.title = element_blank(),
panel.background = element_blank(),  panel.grid = element_blank(),
panel.border = element_rect(colour = "black", fill=NA, size=1)) +
scale_fill_manual(values = c("#D7FFF1", "#008c9e"))#+scale_y_continuous(limits=c(0,0.5),breaks=seq(0,0.5,0.1))
plot1
i=1
Trait=c("PP","ALB","AAA","ALT","AST","Baso","Bilirubin","BMI","BUN","CAD","Cystatin","DBP","Eosino",
"FPG","HB","HBA1C","HDL","LDL","Mono","Neutro","PLA","RBC","SBP","T2D",
"TCh","TG","UA","VTE","WBC","sP","QTI","JTI","QRS","AF","ALP","HEG","eGFR","LYM","GGT","FFratio","APOA1","APOB","SHBG","PLE2","PLE1")
w=arrow::read_parquet(glue("/mnt/vstor/SOM_EPBI_XXZ10/yxy1234/MR_CGTS/{Trait[i]}_analysis/{Trait[i]}.parquet"))
Trait=c("PP","ALB","AAA","ALT","AST","Baso","Bilirubin","BMI","BUN","CAD","Cystatin","DBP","Eosino",
"FPG","HB","HBA1C","HDL","LDL","Mono","Neutro","PLA","RBC","SBP","T2D",
"TCh","TG","UA","VTE","WBC","sP","QTI","JTI","QRS","AF","ALP","HEG","eGFR","LYM","GGT","FFratio","APOA1","APOB","SHBG","PLE2","PLE1")
for(i in 1:45){
w=arrow::read_parquet(glue("/mnt/vstor/SOM_EPBI_XXZ10/yxy1234/MR_CGTS/{Trait[i]}_analysis/{Trait[i]}.parquet"))
w=w%>%mutate(P=pchisq(Zscore^2,1,lower.tail=F))%>%dplyr::select(SNP,P)%>%dplyr::filter(P<5e-6)
fwrite(w,glue("~/MR_CGTS/{Trait[i]}_analysis/plinkfile/{Trait[i]}.txt"),row.names=F,quote=F,sep="\t")
setwd("~/Plink")
system(glue("./plink --bfile /mnt/vstor/SOM_EPBI_XXZ10/yxy1234/NealeReference/all_chrs --clump ~/MR_CGTS/{Trait[i]}_analysis/plinkfile/{Trait[i]}.txt --clump-field P  --clump-kb 1000 --clump-p1 5e-8 --clump-p2 5e-8 --clump-r2 0.01 --out ~/MR_CGTS/{Trait[i]}_analysis/plinkfile/{Trait[i]}"))
}
Trait=c("PP","ALB","AAA","ALT","AST","Baso","Bilirubin","BMI","BUN","CAD","Cystatin","DBP","Eosino",
"FPG","HB","HBA1C","HDL","LDL","Mono","Neutro","PLA","RBC","SBP","T2D",
"TCh","TG","UA","VTE","WBC","sP","QTI","JTI","QRS","AF","ALP","HEG","eGFR","LYM","GGT","FFratio","APOA1","APOB","SHBG","PLE2","PLE1","HF","PRI","Stroke","CKD",
"VV","CAC","CRP","PAD")
library(glue)
library(data.table)
library(dplyr)
library(org.Hs.eg.db)
library(stringr)
library(ggplot2)
library(tidyr)
library(dplyr)
library(annotables,lib.loc="~/R/x86_64-pc-linux-gnu-library/4.2/")
grch38
options(bitmapType = "cairo")
source("~/MR_CGTS/basicfunction.R")
extract_and_replace <- function(df, GeneSymbolEnsemble) {
# 找出含有 'clu' 的基因位置
clu_indices <- grep("clu", df$Gene)
# 提取含有 "ENSG" 的部分并替换
df$Gene[clu_indices] <- sub(".*(ENSG\\d+).*", "\\1", df$Gene[clu_indices])
# 使用 match 函数在 GeneSymbolEnsemble 中查找并替换
match_indices <- match(df$Gene[clu_indices], GeneSymbolEnsemble$Ensembl)
df$Gene[clu_indices] <- GeneSymbolEnsemble$Symbol[match_indices]
return(df)
}
variant=arrow::read_parquet("~/1000G/9M_BP_3738.parquet")
variant$MarkerName=paste0(variant$CHR,":",variant$BP)
tissue=readRDS("~/MR_CGTS/Tissue31.rds")
#UVMR=readRDS("~/MR_CGTS/UVMRlist.rds")
GeneSymbolEnsemble <- readRDS("~/MR_CGTS/GeneInformation.rds")
Trait=c("PP","ALB","AAA","ALT","AST","Baso","Bilirubin","BMI","BUN","CAD","Cystatin","DBP","Eosino",
"FPG","HB","HBA1C","HDL","LDL","Mono","Neutro","PLA","RBC","SBP","T2D",
"TCh","TG","UA","VTE","WBC","sP","QTI","JTI","QRS","AF","ALP","HEG","eGFR","LYM","GGT","FFratio","APOA1","APOB","SHBG","PLE2","PLE1")
Trait_FullName <- c("Pulse Pressure",
"Albumin",
"Abdominal Aortic Aneurysm",
"Alanine Aminotransferase",
"Aspartate Aminotransferase",
"Basophils",
"Total Bilirubin",
"Body Mass Index",
"Blood Urea Nitrogen",
"Coronary Artery Disease",
"Cystatin C",
"Diastolic Blood Pressure",
"Eosinophils",
"Fasting Plasma Glucose",
"Hemoglobin",
"Hemoglobin A1c",
"HDL Cholesterol",
"LDL Cholesterol",
"Monocytes",
"Neutrophils",
"Platelets",
"Red Blood Cells",
"Systolic Blood Pressure",
"Type 2 Diabetes",
"Total Cholesterol",
"Triglycerides",
"Urate",
"Venous Thromboembolism",
"White Blood Cells",
"Serum Phosphate",
"QT Interval",
"JT Interval",
"QRS Complex",
"Atrial Fibrillation",
"Alkaline Phosphatase",
"Standing Height",
"Creatinine-Based eGFR",
"Lymphocytes",
"Gamma-Glutamyl Transferase",
"FEV1/FVC Ratio",
"Apolipoprotein A1",
"Apolipoprotein B",
"Sex Hormone-Binding Globulin",
"Pleiotropy (SBP to DBP)",
"Pleiotropy (DBP to SBP)")
W=readRDS("~/MR_CGTS/UVMRlist.rds")
#W=W[which(W$P<(0.05/2e4)),]
#W$Variable <- gsub("\\+Cortex$", "+Brain_Cortex", W$Variable )
#W$Variable <- gsub("\\+Cerebellum$", "+Brain_Cerebellum", W$Variable )
#W$Genetype <- ifelse(grepl("clu", W$Variable), "sGene", "eGene")
#W[c("Gene", "Tissue")] <- do.call(rbind, strsplit(W$Variable, "\\+"))
#W=extract_and_replace(W,GeneSymbolEnsemble)
#saveRDS(W,"~/MR_CGTS/UVMRlist.rds")
NovelTGVIS=NovelTGFM=list()
for(i in 1:45){
GG <- readRDS(glue("~/MR_CGTS/{Trait[i]}_analysis/Refine/susieselect_inf.rds"))  %>% Forcerbind(.) %>% group_by(cs,CHR,BP) %>% mutate(cs.pratt = sum(pratt)) %>% ungroup() %>% dplyr::filter(cs.pratt>0.15)
GG=GG[which(GG$Type!="SNP"),]
GG$Variable <- gsub("\\+Cortex$", "+Brain_Cortex", GG$Variable )
GG$Variable <- gsub("\\+Cerebellum$", "+Brain_Cerebellum", GG$Variable )
GG$Identifier=paste0(GG$CHR,":",GG$BP,":",GG$Variable)
GG=GG[!duplicated(GG$Identifier),]
GG[c("Gene", "Tissue")] <- do.call(rbind, strsplit(GG$Variable, "\\+"))
GG=extract_and_replace(GG,GeneSymbolEnsemble)
GG$MarkerName=paste0(GG$CHR,":",GG$BP)
#GG=merge(GG,variant[,c("MarkerName","BP38")],by="MarkerName",all.x=T)
#GG$TSS=grch38$start[match(GG$Gene,grch38$symbol)]
#GG$TES=grch38$end[match(GG$Gene,grch38$symbol)]
GG$Identifier=paste0(GG$MarkerName,":CS",GG$cs)
Gene12=names(table(GG$Identifier))[which(table(GG$Identifier)<=2)]
GG1=GG[which(GG$Identifier%in%Gene12),]
GG1=na.omit(GG1)
WW=W[which(W$Trait==Trait[i]),]
GG1=GG1[which(GG1$Gene%in%WW$Gene),]
WW=WW[which(W$P<(0.05/2e4/31)),]
a=intersect(WW$Gene,GG1$Gene)
b=setdiff(GG$Gene,a)
GG2=GG1[which(GG1$Gene%in%b),]
NovelTGVIS[[i]]=data.frame(Total=length(unique(GG$Identifier)),Novel=length(unique(GG2$Identifier)),Trait=Trait_FullName[i])
GG <- readRDS(glue("~/MR_CGTS/{Trait[i]}_analysis/Refine/tgfmselect.rds"))  %>% Forcerbind(.) %>% group_by(cs,CHR,BP) %>% mutate(cs.pratt = sum(pratt)) %>% ungroup() %>% dplyr::filter(pip>0.5)
GG=GG[which(GG$Type!="SNP"),]
GG$Variable <- gsub("\\+Cortex$", "+Brain_Cortex", GG$Variable )
GG$Variable <- gsub("\\+Cerebellum$", "+Brain_Cerebellum", GG$Variable )
GG$Identifier=paste0(GG$CHR,":",GG$BP,":",GG$Variable)
GG=GG[!duplicated(GG$Identifier),]
GG[c("Gene", "Tissue")] <- do.call(rbind, strsplit(GG$Variable, "\\+"))
GG=extract_and_replace(GG,GeneSymbolEnsemble)
GG$MarkerName=paste0(GG$CHR,":",GG$BP)
#GG=merge(GG,variant[,c("MarkerName","BP38")],by="MarkerName",all.x=T)
#GG$TSS=grch38$start[match(GG$Gene,grch38$symbol)]
#GG$TES=grch38$end[match(GG$Gene,grch38$symbol)]
GG$Identifier=paste0(GG$MarkerName,":CS",GG$cs)
Gene12=names(table(GG$Identifier))[which(table(GG$Identifier)<=2)]
GG1=GG[which(GG$Identifier%in%Gene12),]
GG1=na.omit(GG1)
WW=W[which(W$Trait==Trait[i]),]
GG1=GG1[which(GG1$Gene%in%WW$Gene),]
WW=WW[which(W$P<(0.05/2e4/31)),]
a=intersect(WW$Gene,GG1$Gene)
b=setdiff(GG$Gene,a)
GG2=GG1[which(GG1$Gene%in%b),]
NovelTGFM[[i]]=data.frame(Total=length(unique(GG$Identifier)),Novel=length(unique(GG2$Identifier)),Trait=Trait_FullName[i])
}
NovelTGVIS=do.call(rbind,NovelTGVIS)
NovelTGFM=do.call(rbind,NovelTGFM)
a=c(1:45)
names(a)=Trait_FullName
for(i in 1:45){
plink=fread(glue("~/MR_CGTS/{Trait[i]}_analysis/plinkfile/{Trait[i]}.clumped"))
indcluster=MRBEEX::cluster_snps(plink[,c("SNP","CHR","BP","P")],window_size=1e6)
a[i]=nrow(indcluster)
}
NovelTGVIS$Total_Fraction=NovelTGVIS$Total/a
NovelTGVIS$Novel_Fraction=NovelTGVIS$Novel/a
NovelTGFM$Total_Fraction=NovelTGFM$Total/a
NovelTGFM$Novel_Fraction=NovelTGFM$Novel/a
NovelTGVIS$Ratio=NovelTGVIS$Novel/NovelTGVIS$Total
NovelTGFM$Ratio=NovelTGFM$Novel/NovelTGFM$Total
NovelTGVIS1 <- NovelTGVIS %>%
pivot_longer(cols = c(Total, Total_Fraction, Novel, Novel_Fraction),
names_to = c(".value", "Type"),
names_sep = "_") %>%
mutate(Type = ifelse(Type == "Fraction", "Proportion", "Number"))
NovelTGVIS1$Type[is.na(NovelTGVIS1$Type)]="Number"
NovelTGFM1 <- NovelTGFM %>%
pivot_longer(cols = c(Total, Total_Fraction, Novel, Novel_Fraction),
names_to = c(".value", "Type"),
names_sep = "_") %>%
mutate(Type = ifelse(Type == "Fraction", "Proportion", "Number"))
NovelTGFM1$Type[is.na(NovelTGFM1$Type)]="Number"
NovelTGVIS1 <- NovelTGVIS1 %>%
pivot_longer(cols = c(Total, Novel),
names_to = "What",
values_to = "results")
NovelTGFM1 <- NovelTGFM1 %>%
pivot_longer(cols = c(Total, Novel),
names_to = "What",
values_to = "results")
NovelTGVIS1$What[which(NovelTGVIS1$What=="Novel")]="Likely Novel"
NovelTGFM1$What[which(NovelTGFM1$What=="Novel")]="Likely Novel"
plot1=ggplot(data = NovelTGVIS1, aes(x = results, y = Trait, fill = What)) +
geom_bar(stat = "identity", position = position_dodge(),color="grey30") +
facet_wrap(~Type, scales = "free_x", ncol = 2) +
xlab("number of causal gene-tissue pairs") +
theme(axis.text.y = element_text(size = rel(0.9)),
axis.title.y = element_blank(),
legend.position = c(0.35, 0.01),
legend.justification = c(0.35, 0.01),
legend.title = element_blank(),
panel.background = element_blank(),  panel.grid = element_blank(),
panel.border = element_rect(colour = "black", fill=NA, size=1)) +
scale_fill_manual(values = c("#D7FFF1", "#008c9e"))#+scale_y_continuous(limits=c(0,0.5),breaks=seq(0,0.5,0.1))
plot1
NovelTGVIS=NovelTGFM=list()
for(i in 1:45){
GG <- readRDS(glue("~/MR_CGTS/{Trait[i]}_analysis/Refine/susieselect_inf.rds"))  %>% Forcerbind(.) %>% group_by(cs,CHR,BP) %>% mutate(cs.pratt = sum(pratt)) %>% ungroup() %>% dplyr::filter(cs.pratt>0.15)
GG=GG[which(GG$Type=="SNP"),]
GG$Identifier=paste0(GG$CHR,":",GG$BP)
GG=GG[!duplicated(GG$Identifier),]
NovelTGVIS[[i]]=data.frame(Total=length(unique(GG$Identifier)),Trait=Trait_FullName[i])
GG <- readRDS(glue("~/MR_CGTS/{Trait[i]}_analysis/Refine/tgfmselect.rds"))  %>% Forcerbind(.) %>% group_by(cs,CHR,BP) %>% mutate(cs.pratt = sum(pratt)) %>% ungroup() %>% dplyr::filter(pip>0.5)
GG=GG[which(GG$Type=="SNP"),]
GG$Identifier=paste0(GG$CHR,":",GG$BP)
GG=GG[!duplicated(GG$Identifier),]
NovelTGFM[[i]]=data.frame(Total=length(unique(GG$Identifier)),Trait=Trait_FullName[i])
}
NovelTGVIS=do.call(rbind,NovelTGVIS)
NovelTGFM=do.call(rbind,NovelTGFM)
NovelTGVIS$Total_Fraction=NovelTGVIS$Total/a
NovelTGFM$Total_Fraction=NovelTGFM$Total/a
NovelTGVIS1 <- NovelTGVIS %>%
pivot_longer(cols = c(Total, Total_Fraction),
names_to = c(".value", "Type"),
names_sep = "_") %>%
mutate(Type = ifelse(Type == "Fraction", "Proportion", "Number"))
NovelTGVIS1$Type[is.na(NovelTGVIS1$Type)]="Number"
NovelTGVIS1$Method="TGVIS"
NovelTGFM1 <- NovelTGFM %>%
pivot_longer(cols = c(Total, Total_Fraction),
names_to = c(".value", "Type"),
names_sep = "_") %>%
mutate(Type = ifelse(Type == "Fraction", "Proportion", "Number"))
NovelTGFM1$Type[is.na(NovelTGFM1$Type)]="Number"
NovelTGFM1$Method="TGFM"
Novel=rbind(NovelTGVIS1,NovelTGFM1)
Novel$Method=ordered(Novel$Method,levels=c("TGVIS","TGFM"))
plot3=ggplot(data = Novel, aes(x = Total, y = Trait,fill=Method)) +
geom_bar(stat = "identity", position = position_dodge(),color="grey30") +
facet_wrap(~Type, scales = "free_x", ncol = 2) +
xlab("number of direct causal variants") +
theme(axis.text.y = element_text(size = rel(0.9)),
axis.title.y = element_blank(),
legend.position = c(0.37, 0.01),
legend.justification = c(0.37, 0.01),
legend.title = element_blank(),
panel.background = element_blank(),  panel.grid = element_blank(),
panel.border = element_rect(colour = "black", fill=NA, size=1))+
scale_fill_manual(values = c("#008c9e", "#f9c00c"))
plot3
